name: Crear o actualizacion de Lambdas

on:
  push:
    branches:

      - main


permissions:
  id-token: write
  contents: read


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar repo
        uses: actions/checkout@v4

      - name: Instalar jq
        run: sudo apt-get install jq -y

      - name: Configurar AWS credenciales via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::891377180652:role/GitHubActionsOIDC-DeployRole
          aws-region: us-east-1

      - name: Empaquetar Lambda
        run: |
          sudo apt install zip -y

          cd lambda

          CONFIG=$(cat config.json)
          FUNCTION_NAME=$(echo $CONFIG | jq -r '.FunctionName')
          ROLE=$(echo $CONFIG | jq -r '.Role')
          HANDLER=$(echo $CONFIG | jq -r '.Handler')
          RUNTIME=$(echo $CONFIG | jq -r '.Runtime')
          TIMEOUT=$(echo $CONFIG | jq -r '.Timeout')
          MEMORY=$(echo $CONFIG | jq -r '.MemorySize')

          echo "Creando Lambda $FUNCTION_NAME..."

          mkdir -p lambda_zip
          pip install -r requirements.txt -t lambda_zip
          cp lambda_function.py lambda_zip
          cd lambda_zip
          zip -r ../lambda_zip.zip . --exclude ../config.json  # Excluye config.json

          cd ..

          
          echo "Intentando crear Lambda $FUNCTION_NAME..."

          aws lambda create-function \
            --function-name "$FUNCTION_NAME" \
            --runtime "$RUNTIME" \
            --role "$ROLE" \
            --handler "$HANDLER" \
            --zip-file fileb://lambda_zip.zip \
            --timeout "$TIMEOUT" \
            --memory-size "$MEMORY" \
          || {
            echo "Ya existe, actualizando código..."
            aws lambda update-function-code \
              --function-name "$FUNCTION_NAME" \
              --zip-file fileb://lambda_zip.zip
          }
              
          echo "Lambda $FUNCTION_NAME creada o actualizada con éxito."
